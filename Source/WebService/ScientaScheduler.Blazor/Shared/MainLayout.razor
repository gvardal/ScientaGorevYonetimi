@inherits LayoutComponentBase
@inject NavigationManager navigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject HttpClient client
@inject Blazored.LocalStorage.ILocalStorageService localStorage

<PageTitle>ScientaScheduler.Blazor</PageTitle>

@*<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            <a href="" target="_blank">@loginStr</a>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>*@

<AuthorizeView>
    <Authorized>
        <div class="container-fluid p-0">
            <div class="col-12">
                <SfAppBar ColorMode="AppBarColor.Primary">
                    <SfButton aria-label="menu" CssClass="e-inherit menu" IconCss="e-icons e-menu"></SfButton>
                    <span class="regular">Merhaba @loginStr</span>
                    <AppBarSpacer></AppBarSpacer>
                    <SfButton CssClass="e-inherit login" IconCss="oi oi-account-logout" OnClick="UserLogOut"></SfButton>
                </SfAppBar>
            </div>
            <div class="content px-4">
                @Body
            </div>
        </div>
    </Authorized>
</AuthorizeView>

@code {

    private string loginStr { get; set; } = string.Empty;

    [CascadingParameter]
    public Task<AuthenticationState> AuthSate { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthSate;
        if (authState.User.Identity!.IsAuthenticated)
        {
            loginStr = authState.User.Claims.Where(x => x.Type == "userFullName").First().Value;
        }
        else
        {
            navigationManager.NavigateTo("login");
        }
    }

    private async Task UserLogOut()
    {
        await localStorage.RemoveItemAsync("token");
        (AuthenticationStateProvider as AuthStateProvider)!.NotifyUserLogout();
        client.DefaultRequestHeaders.Authorization = null;
        navigationManager.NavigateTo("login");
    }
}
